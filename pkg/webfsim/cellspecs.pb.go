// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cellspecs.proto

package webfsim

import (
	fmt "fmt"
	rwacryptocell "github.com/brendoncarroll/webfs/pkg/cells/rwacryptocell"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CellSpec struct {
	// Types that are valid to be assigned to Spec:
	//	*CellSpec_Http
	//	*CellSpec_Rwacrypto
	//	*CellSpec_Secretbox
	Spec                 isCellSpec_Spec `protobuf_oneof:"spec"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CellSpec) Reset()         { *m = CellSpec{} }
func (m *CellSpec) String() string { return proto.CompactTextString(m) }
func (*CellSpec) ProtoMessage()    {}
func (*CellSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_439b9c02290cbc21, []int{0}
}

func (m *CellSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CellSpec.Unmarshal(m, b)
}
func (m *CellSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CellSpec.Marshal(b, m, deterministic)
}
func (m *CellSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CellSpec.Merge(m, src)
}
func (m *CellSpec) XXX_Size() int {
	return xxx_messageInfo_CellSpec.Size(m)
}
func (m *CellSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_CellSpec.DiscardUnknown(m)
}

var xxx_messageInfo_CellSpec proto.InternalMessageInfo

type isCellSpec_Spec interface {
	isCellSpec_Spec()
}

type CellSpec_Http struct {
	Http *HTTPCellSpec `protobuf:"bytes,1,opt,name=http,proto3,oneof"`
}

type CellSpec_Rwacrypto struct {
	Rwacrypto *RWACryptoCellSpec `protobuf:"bytes,128,opt,name=rwacrypto,proto3,oneof"`
}

type CellSpec_Secretbox struct {
	Secretbox *SecretBoxCellSpec `protobuf:"bytes,129,opt,name=secretbox,proto3,oneof"`
}

func (*CellSpec_Http) isCellSpec_Spec() {}

func (*CellSpec_Rwacrypto) isCellSpec_Spec() {}

func (*CellSpec_Secretbox) isCellSpec_Spec() {}

func (m *CellSpec) GetSpec() isCellSpec_Spec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *CellSpec) GetHttp() *HTTPCellSpec {
	if x, ok := m.GetSpec().(*CellSpec_Http); ok {
		return x.Http
	}
	return nil
}

func (m *CellSpec) GetRwacrypto() *RWACryptoCellSpec {
	if x, ok := m.GetSpec().(*CellSpec_Rwacrypto); ok {
		return x.Rwacrypto
	}
	return nil
}

func (m *CellSpec) GetSecretbox() *SecretBoxCellSpec {
	if x, ok := m.GetSpec().(*CellSpec_Secretbox); ok {
		return x.Secretbox
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*CellSpec) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*CellSpec_Http)(nil),
		(*CellSpec_Rwacrypto)(nil),
		(*CellSpec_Secretbox)(nil),
	}
}

type HTTPCellSpec struct {
	Url                  string            `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Headers              map[string]string `protobuf:"bytes,2,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *HTTPCellSpec) Reset()         { *m = HTTPCellSpec{} }
func (m *HTTPCellSpec) String() string { return proto.CompactTextString(m) }
func (*HTTPCellSpec) ProtoMessage()    {}
func (*HTTPCellSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_439b9c02290cbc21, []int{1}
}

func (m *HTTPCellSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HTTPCellSpec.Unmarshal(m, b)
}
func (m *HTTPCellSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HTTPCellSpec.Marshal(b, m, deterministic)
}
func (m *HTTPCellSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HTTPCellSpec.Merge(m, src)
}
func (m *HTTPCellSpec) XXX_Size() int {
	return xxx_messageInfo_HTTPCellSpec.Size(m)
}
func (m *HTTPCellSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_HTTPCellSpec.DiscardUnknown(m)
}

var xxx_messageInfo_HTTPCellSpec proto.InternalMessageInfo

func (m *HTTPCellSpec) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *HTTPCellSpec) GetHeaders() map[string]string {
	if m != nil {
		return m.Headers
	}
	return nil
}

type RWACryptoCellSpec struct {
	Inner                *CellSpec             `protobuf:"bytes,1,opt,name=inner,proto3" json:"inner,omitempty"`
	PrivateEntity        *rwacryptocell.Entity `protobuf:"bytes,2,opt,name=private_entity,json=privateEntity,proto3" json:"private_entity,omitempty"`
	PublicEntity         *rwacryptocell.Entity `protobuf:"bytes,3,opt,name=public_entity,json=publicEntity,proto3" json:"public_entity,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *RWACryptoCellSpec) Reset()         { *m = RWACryptoCellSpec{} }
func (m *RWACryptoCellSpec) String() string { return proto.CompactTextString(m) }
func (*RWACryptoCellSpec) ProtoMessage()    {}
func (*RWACryptoCellSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_439b9c02290cbc21, []int{2}
}

func (m *RWACryptoCellSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RWACryptoCellSpec.Unmarshal(m, b)
}
func (m *RWACryptoCellSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RWACryptoCellSpec.Marshal(b, m, deterministic)
}
func (m *RWACryptoCellSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RWACryptoCellSpec.Merge(m, src)
}
func (m *RWACryptoCellSpec) XXX_Size() int {
	return xxx_messageInfo_RWACryptoCellSpec.Size(m)
}
func (m *RWACryptoCellSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_RWACryptoCellSpec.DiscardUnknown(m)
}

var xxx_messageInfo_RWACryptoCellSpec proto.InternalMessageInfo

func (m *RWACryptoCellSpec) GetInner() *CellSpec {
	if m != nil {
		return m.Inner
	}
	return nil
}

func (m *RWACryptoCellSpec) GetPrivateEntity() *rwacryptocell.Entity {
	if m != nil {
		return m.PrivateEntity
	}
	return nil
}

func (m *RWACryptoCellSpec) GetPublicEntity() *rwacryptocell.Entity {
	if m != nil {
		return m.PublicEntity
	}
	return nil
}

type SecretBoxCellSpec struct {
	Inner                *CellSpec `protobuf:"bytes,1,opt,name=inner,proto3" json:"inner,omitempty"`
	Secret               []byte    `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SecretBoxCellSpec) Reset()         { *m = SecretBoxCellSpec{} }
func (m *SecretBoxCellSpec) String() string { return proto.CompactTextString(m) }
func (*SecretBoxCellSpec) ProtoMessage()    {}
func (*SecretBoxCellSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_439b9c02290cbc21, []int{3}
}

func (m *SecretBoxCellSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SecretBoxCellSpec.Unmarshal(m, b)
}
func (m *SecretBoxCellSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SecretBoxCellSpec.Marshal(b, m, deterministic)
}
func (m *SecretBoxCellSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SecretBoxCellSpec.Merge(m, src)
}
func (m *SecretBoxCellSpec) XXX_Size() int {
	return xxx_messageInfo_SecretBoxCellSpec.Size(m)
}
func (m *SecretBoxCellSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_SecretBoxCellSpec.DiscardUnknown(m)
}

var xxx_messageInfo_SecretBoxCellSpec proto.InternalMessageInfo

func (m *SecretBoxCellSpec) GetInner() *CellSpec {
	if m != nil {
		return m.Inner
	}
	return nil
}

func (m *SecretBoxCellSpec) GetSecret() []byte {
	if m != nil {
		return m.Secret
	}
	return nil
}

func init() {
	proto.RegisterType((*CellSpec)(nil), "webfs.CellSpec")
	proto.RegisterType((*HTTPCellSpec)(nil), "webfs.HTTPCellSpec")
	proto.RegisterMapType((map[string]string)(nil), "webfs.HTTPCellSpec.HeadersEntry")
	proto.RegisterType((*RWACryptoCellSpec)(nil), "webfs.RWACryptoCellSpec")
	proto.RegisterType((*SecretBoxCellSpec)(nil), "webfs.SecretBoxCellSpec")
}

func init() { proto.RegisterFile("cellspecs.proto", fileDescriptor_439b9c02290cbc21) }

var fileDescriptor_439b9c02290cbc21 = []byte{
	// 354 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0x4f, 0x4b, 0xf3, 0x40,
	0x10, 0xc6, 0xdf, 0xf4, 0xef, 0xdb, 0x49, 0xfa, 0xf6, 0xed, 0x2a, 0x12, 0x7a, 0x2a, 0x01, 0xa1,
	0x5e, 0x82, 0xc4, 0x8b, 0xf6, 0x66, 0x4b, 0xa1, 0x47, 0xd9, 0x16, 0x04, 0x2f, 0x92, 0xac, 0x23,
	0x0d, 0x8d, 0xc9, 0xb2, 0xd9, 0xfe, 0xc9, 0x4d, 0xbf, 0x85, 0x47, 0xbf, 0x83, 0x5f, 0x50, 0xb2,
	0x9b, 0x68, 0xa4, 0x1e, 0xbc, 0x65, 0xe6, 0x79, 0x7e, 0xc3, 0x33, 0x93, 0x85, 0x1e, 0xc3, 0x28,
	0x4a, 0x39, 0xb2, 0xd4, 0xe5, 0x22, 0x91, 0x09, 0x69, 0xee, 0x30, 0x78, 0x4c, 0x07, 0x16, 0x13,
	0x19, 0x97, 0x89, 0x6e, 0x3a, 0xef, 0x06, 0xfc, 0x9d, 0x62, 0x14, 0x2d, 0x38, 0x32, 0x72, 0x06,
	0x8d, 0x95, 0x94, 0xdc, 0x36, 0x86, 0xc6, 0xc8, 0xf4, 0x8e, 0x5c, 0x05, 0xb8, 0xf3, 0xe5, 0xf2,
	0xa6, 0xb4, 0xcc, 0xff, 0x50, 0x65, 0x21, 0x57, 0xd0, 0x11, 0x3b, 0x5f, 0x8f, 0xb2, 0x9f, 0x35,
	0x60, 0x17, 0x00, 0xbd, 0xbd, 0x9e, 0x2a, 0xa1, 0x42, 0x7d, 0xb9, 0x73, 0x34, 0x45, 0x26, 0x50,
	0x06, 0xc9, 0xde, 0x7e, 0xf9, 0x8e, 0x2e, 0x94, 0x30, 0x49, 0xf6, 0x55, 0xf4, 0xd3, 0x3d, 0x69,
	0x41, 0x23, 0xdf, 0xc8, 0x79, 0x35, 0xc0, 0xaa, 0xc6, 0x22, 0xff, 0xa1, 0xbe, 0x11, 0x91, 0x0a,
	0xde, 0xa1, 0xf9, 0x27, 0x19, 0x43, 0x7b, 0x85, 0xfe, 0x03, 0x8a, 0xd4, 0xae, 0x0d, 0xeb, 0x23,
	0xd3, 0x1b, 0xfe, 0xb0, 0x8e, 0x3b, 0xd7, 0x96, 0x59, 0x2c, 0x45, 0x46, 0x4b, 0x60, 0x30, 0x06,
	0xab, 0x2a, 0xe4, 0xd3, 0xd7, 0x98, 0x95, 0xd3, 0xd7, 0x98, 0x91, 0x63, 0x68, 0x6e, 0xfd, 0x68,
	0x83, 0x76, 0x4d, 0xf5, 0x74, 0x31, 0xae, 0x5d, 0x1a, 0xce, 0x9b, 0x01, 0xfd, 0x83, 0x03, 0x90,
	0x53, 0x68, 0x86, 0x71, 0x8c, 0xa2, 0x38, 0x6d, 0xaf, 0xc8, 0x52, 0xea, 0x54, 0xab, 0xc4, 0x83,
	0x7f, 0x5c, 0x84, 0x5b, 0x5f, 0xe2, 0x3d, 0xc6, 0x32, 0x94, 0x99, 0x9a, 0x6f, 0x7a, 0xa6, 0xcb,
	0x18, 0x77, 0x67, 0xaa, 0x45, 0xbb, 0x85, 0x45, 0x97, 0xe4, 0x1c, 0xba, 0x7c, 0x13, 0x44, 0x21,
	0x2b, 0x91, 0xfa, 0x21, 0x62, 0x69, 0x87, 0xae, 0x1c, 0x0a, 0xfd, 0x83, 0x3b, 0xff, 0x36, 0xe1,
	0x09, 0xb4, 0xf4, 0xef, 0x50, 0xc9, 0x2c, 0x5a, 0x54, 0x93, 0xce, 0x5d, 0x5b, 0x01, 0xe1, 0x53,
	0xd0, 0x52, 0x2f, 0xeb, 0xe2, 0x23, 0x00, 0x00, 0xff, 0xff, 0x37, 0xdd, 0x21, 0xb2, 0x81, 0x02,
	0x00, 0x00,
}
